/*
 * USER
 * ExchangerPoint Crypto Exchange Plateform - USER Specification
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exchangerpoint.restspec.dto.user;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * IdentityVerificationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-01T06:52:50.420Z")
public class IdentityVerificationRequest {
	@SerializedName("userName")
	private String userName = null;

	@SerializedName("id")
	private int id;

	@SerializedName("address")
	private int address;

	@SerializedName("card")
	private int card;

	@SerializedName("email")
	private int email;

	@SerializedName("phone")
	private int phone;

	@SerializedName("verificationCode")
	private String verificationCode = null;

	public IdentityVerificationRequest userName(String userName) {
		this.userName = userName;
		return this;
	}

	/**
	 * Unique id for user identification
	 * 
	 * @return userName
	 **/
	@ApiModelProperty(required = true, value = "Unique id for user identification")
	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public IdentityVerificationRequest email(int email) {
		this.email = email;
		return this;
	}

	/**
	 * email
	 * 
	 * @return email
	 **/
	@ApiModelProperty(required = true, value = "email")
	public int getEmail() {
		return email;
	}

	public void setEmail(int email) {
		this.email = email;
	}

	public IdentityVerificationRequest phone(int phone) {
		this.phone = phone;
		return this;
	}

	/**
	 * phone
	 * 
	 * @return phone
	 **/
	@ApiModelProperty(required = true, value = "phone")
	public int getPhone() {
		return phone;
	}

	public void setPhone(int phone) {
		this.phone = phone;
	}

	public IdentityVerificationRequest id(int id) {
		this.id = id;
		return this;
	}

	/**
	 * id
	 * 
	 * @return id
	 **/
	@ApiModelProperty(required = true, value = "id")
	public int getId() {
		return id;
	}
	
	
	public void setId(int id) {
		this.id = id;
	}

	public IdentityVerificationRequest address(int address) {
		this.address = address;
		return this;
	}

	/**
	 * address
	 * 
	 * @return address
	 **/
	@ApiModelProperty(required = true, value = "address")
	public int getAddress() {
		return address;
	}

	public void setAdress(int address) {
		this.address = address;
	}

	public IdentityVerificationRequest card(int card) {
		this.card = card;
		return this;
	}

	/**
	 * card
	 * 
	 * @return card
	 **/
	@ApiModelProperty(required = true, value = "card")
	public int getCard() {
		return card;
	}

	public void setCard(int card) {
		this.card = card;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		IdentityVerificationRequest activateAccountRequest = (IdentityVerificationRequest) o;
		return Objects.equals(this.userName, activateAccountRequest.userName)
				&& Objects.equals(this.id, activateAccountRequest.id)
				&& Objects.equals(this.address, activateAccountRequest.address)
				&& Objects.equals(this.card, activateAccountRequest.card)
				&& Objects.equals(this.email, activateAccountRequest.email)
				&& Objects.equals(this.phone, activateAccountRequest.phone)
				&& Objects.equals(this.verificationCode, activateAccountRequest.verificationCode);
	}

	@Override
	public int hashCode() {
		return Objects.hash(userName, id, address, card, email, phone);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class IdentityVerificationRequest {\n");

		sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    address: ").append(toIndentedString(address)).append("\n");
		sb.append("    card: ").append(toIndentedString(card)).append("\n");
		sb.append("    email: ").append(toIndentedString(email)).append("\n");
		sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
		sb.append("    verificationCode: ").append(toIndentedString(verificationCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
